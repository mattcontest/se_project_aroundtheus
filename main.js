!function(){"use strict";class e{constructor(e,t,o){let{name:s,link:n}=e;this.name=s,this.link=n,this._cardSelector=t,this._handleImageClick=o}_setEventListeners(){this._deleteButton.addEventListener("click",(()=>{this._handleDeleteCard()})),this._likeButton.addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick({link:this.link,name:this.name})}))}_handleLikeIcon(){this._likeButton.classList.toggle("card__button_active")}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.cloneNode(!0).firstElementChild,this._likeButton=this._cardElement.querySelector(".card__button"),this._deleteButton=this._cardElement.querySelector(".card__button_delete"),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__title"),this._cardImage.src=this.link,this._cardImage.alt=this.name,this._cardTitle.textContent=this.name,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){let{inputSelector:o,submitButtonSelector:s,inactiveButtonClass:n,inputErrorClass:r,errorClass:i}=e;this._inputSelector=o,this._submitButtonSelector=s,this._inactiveButtonClass=n,this._inputErrorClass=r,this._errorClass=i,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}disableSubmitButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_toggleButtonState(){this._hasInvalidInput(this._inputElements)?this.disableSubmitButton():this.enableButton()}resetValidation(){this._toggleButtonState(),this._inputElements.forEach((e=>{this._hideInputError(e)}))}_setEventListeners(){this._inputElements=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._toggleButtonState(),this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._toggleButtonState(),this._checkInputValidity(e)}))}))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}enableValidation(){this._setEventListeners()}}class o{constructor(e){let{popupSelector:t}=e;this.popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this),this._handleOverlayClose=this._handleOverlayClose.bind(this)}open(){this.popupElement.classList.add("modal_open"),document.addEventListener("keydown",this._handleEscClose)}close(){this.popupElement.classList.remove("modal_open"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}_handleOverlayClose(e){e.target===this.popupElement&&this.close()}setEventListeners(){this.popupElement.querySelector(".modal__close").addEventListener("click",(()=>this.close())),this.popupElement.addEventListener("mousedown",this._handleOverlayClose)}}class s extends o{constructor(e,t){super({popupSelector:e}),this.popupForm=this.popupElement.querySelector(".modal__form"),this.button=this.popupForm.querySelector(".modal__btn_type_add"),this.hanldeFormSubmit=t}_getInputValues(){const e=this.popupForm.querySelectorAll(".modal__input"),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this.popupForm.addEventListener("submit",(e=>{e.preventDefault(),this.hanldeFormSubmit(this._getInputValues()),this.popupForm.reset(),this.close()})),this._isAdded=!0}}const n=[{name:"Yasmine Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],r={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__btn",inactiveButtonClass:"modal__btn_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},i=(document.querySelector(".profile__name"),document.querySelector("#profile--edit-button")),l=(document.querySelector(".profile__subtitle"),document.querySelector("#edit-modal").querySelector(".modal__container"),document.querySelector("#edit-modal")),a=(l.querySelector(".modal__close"),document.querySelector("#title__form")),c=document.querySelector("#description__form-edit"),u=(l.querySelector(".modal__btn"),document.querySelector("#picture-modal").querySelector(".modal__image-container"),document.querySelector(".modal__image"),document.querySelector(".modal__image-title"),document.querySelector(".modal__close_preview"),document.querySelector("#add-modal")),d=(u.querySelector(".modal__container"),document.querySelector(".profile__add-button")),m=(u.querySelector(".modal__close"),document.querySelector(".modal__form")),_=(document.querySelector(".modal__btn_type_add"),document.querySelector(".modal__form_card")),h=(u.querySelector(".modal__input_type_title"),u.querySelector(".modal__input_type_image"),document.forms["profile-form"],document.querySelector("#card__template").content.firstElementChild,document.querySelector(".cards__list"),new s("#edit-modal",(function(e){y.setUserInfo({profileNameData:e.title,profileJobData:e.description}),m.reset(),h.close()})));h.setEventListeners();const p=new s("#add-modal",(function(e){const t=b({name:e.title,link:e.description});_.reset(),E.addItem(t),f.disableSubmitButton(),p.close()}));p.setEventListeners();const S=new class extends o{constructor(e){super({popupSelector:e}),this._image=this.popupElement.querySelector(".modal__image"),this._cardTitle=this.popupElement.querySelector(".modal__image-title")}open(e){this._image.src=e.link,this._image.alt=e.name,this._cardTitle.textContent=e.name,super.open()}}("#picture-modal");S.setEventListeners();const y=new class{constructor(e){let{profileName:t,profileJob:o}=e;this.name=document.querySelector(t),this.job=document.querySelector(o)}getUserInfo(){return{name:this.name.textContent,description:this.job.textContent}}setUserInfo(e){let{profileNameData:t,profileJobData:o}=e;this.name.textContent=t,this.job.textContent=o}}({profileName:".profile__name",profileJob:".profile__subtitle"}),E=new class{constructor(e,t){let{items:o,renderer:s}=e;this._items=o,this._renderer=s,this._container=document.querySelector(t)}renderItems(e){e.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({initialCards:n,renderer:e=>{const t=b(e);E.addItem(t)}},".cards__list");function b(t){return new e(t,"#card__template",v).getView()}function v(e){S.open(e)}E.renderItems(n),i.addEventListener("click",(()=>{const{name:e,description:t}=y.getUserInfo();a.value=e,c.value=t,g.resetValidation(),g.disableSubmitButton(),h.open()})),d.addEventListener("click",(()=>{p.open()}));const f=new t(r,_),g=new t(r,m);f.enableValidation(),g.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,